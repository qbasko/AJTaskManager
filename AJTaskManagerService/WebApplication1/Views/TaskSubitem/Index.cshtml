@using System.Web.UI.WebControls
@model IEnumerable<WebApplication1.Models.TaskSubitemModel>

@{
    ViewBag.Title = "Index";
}

<h2>Activities</h2>

<p>
    @Html.ActionLink("Create new activity", "Create", new {taskItemId = ViewBag.TaskItemId})
</p>

@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Activity Name", "Index", new { sortOrder = ViewBag.TaskSubitemNameParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.Name)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.TaskItemId)*@
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.Status)*@
        </th>
        <th>
            @Html.ActionLink("Start Date", "Index", new { sortOrder = ViewBag.StartDateParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.StartDateTime)*@
        </th>
        <th>
            @Html.ActionLink("End Date", "Index", new { sortOrder = ViewBag.EndDateParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.EndDateTime)*@
        </th>
        <th>
            @Html.ActionLink("Estimation in hours", "Index", new { sortOrder = ViewBag.EstimationParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.EstimationInHours)*@
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.IsDeleted)*@
        </th>
        <th>
            @Html.ActionLink("Predecessor", "Index", new { sortOrder = ViewBag.PredecessorParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.Predecessor)*@
        </th>
        <th>
            @Html.ActionLink("Successor", "Index", new { sortOrder = ViewBag.SuccessorParam, taskItemId = ViewBag.TaskItemId })
            @*@Html.DisplayNameFor(model => model.Successor)*@
        </th>
        <th>
            @Html.ActionLink("Is Completed", "Index", new { sortOrder = ViewBag.IsCompletedParam, taskItemId = ViewBag.TaskItemId })
           @* @Html.DisplayNameFor(model => model.IsCompleted)*@
        </th>
        <th>
            @Html.ActionLink("Executor", "Index", new { sortOrder = ViewBag.ExecutorParam, taskItemId = ViewBag.TaskItemId })
           @* @Html.DisplayNameFor(model => model.Executor)*@
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.TaskItemId)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EstimationInHours)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.IsDeleted)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Predecessor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Successor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsCompleted)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Executor)
        </td>
        <td>
            @Html.ActionLink("Details", "Details", new { taskItemId = item.TaskItemId, taskSubitemId = item.Id }) |
            @Html.ActionLink("Edit", "Edit", new {taskItemId = item.TaskItemId, taskSubitemId = item.Id}) |
            @Html.ActionLink("Delete", "Delete", new {taskItemId = item.TaskItemId, taskSubitemId = item.Id})
        </td>
    </tr>
}

</table>

<div>
    @Html.ActionLink("Back to projects", "Index", "TaskItem")
</div>
