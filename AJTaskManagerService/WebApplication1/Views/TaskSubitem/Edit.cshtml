@model WebApplication1.Models.TaskSubitemModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit activity</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>TaskSubitemModel</h4>*@
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.TaskItemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskItemId)
                @Html.ValidationMessageFor(model => model.TaskItemId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StatusId)
                @Html.ValidationMessageFor(model => model.StatusId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.StartDateTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.EndDateTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimationInHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimationInHours)
                @Html.ValidationMessageFor(model => model.EstimationInHours)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDeleted)
                @Html.ValidationMessageFor(model => model.IsDeleted)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Predecessor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PredecessorID", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.Predecessor)*@
                @Html.ValidationMessageFor(model => model.Predecessor)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.PredecessorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PredecessorId)
                @Html.ValidationMessageFor(model => model.PredecessorId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Successor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SuccessorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Successor)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.SuccessorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuccessorId)
                @Html.ValidationMessageFor(model => model.SuccessorId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsCompleted)
                @Html.ValidationMessageFor(model => model.IsCompleted)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Executor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExecutorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Executor)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ExecutorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExecutorId)
                @Html.ValidationMessageFor(model => model.ExecutorId)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to activities", "Index", new {taskItemId = ViewBag.TaskItemId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
